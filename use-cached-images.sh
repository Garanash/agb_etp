#!/bin/bash

# ะกะบัะธะฟั ะดะปั ะธัะฟะพะปัะทะพะฒะฐะฝะธั ะบััะธัะพะฒะฐะฝะฝัั ะพะฑัะฐะทะพะฒ
echo "๐ง ะัะฟะพะปัะทะพะฒะฐะฝะธะต ะบััะธัะพะฒะฐะฝะฝัั ะพะฑัะฐะทะพะฒ..."

# ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะฒัะต ะบะพะฝัะตะนะฝะตัั
echo "โน๏ธ  ะััะฐะฝะพะฒะบะฐ ะฒัะตั ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker stop agb_etp_frontend agb_etp_backend agb_etp_postgres 2>/dev/null || true
docker rm agb_etp_frontend agb_etp_backend agb_etp_postgres 2>/dev/null || true

# ะัะพะฒะตััะตะผ, ะบะฐะบะธะต ะพะฑัะฐะทั ั ะฝะฐั ะตััั
echo "๐ ะะพัััะฟะฝัะต ะพะฑัะฐะทั:"
docker images

# ะกะพะทะดะฐะตะผ .env ัะฐะนะป
echo "๐ ะกะพะทะดะฐะฝะธะต .env ัะฐะนะปะฐ..."
cat > .env << 'EOF'
POSTGRES_USER=agb_etp
POSTGRES_PASSWORD=agb_secure_password_2024
POSTGRES_DB=agb_etp
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
DATABASE_URL=postgresql://agb_etp:agb_secure_password_2024@postgres:5432/agb_etp
SECRET_KEY=agb_very_secure_secret_key_2024_change_in_production
DEBUG=False
CORS_ORIGINS=["http://localhost:3000", "http://81.200.158.192:3000", "http://81.200.158.192:8000"]
ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png
MAX_FILE_SIZE=10485760
NEXT_PUBLIC_API_URL=http://81.200.158.192:8000
LOG_LEVEL=INFO
EOF

# ะัะพะฑัะตะผ ะทะฐะฟัััะธัั ั ัััะตััะฒัััะธะผะธ ะพะฑัะฐะทะฐะผะธ
echo "๐ ะะฐะฟััะบ ั ัััะตััะฒัััะธะผะธ ะพะฑัะฐะทะฐะผะธ..."

# ะกะฝะฐัะฐะปะฐ ัะพะปัะบะพ ะฑะฐะทะฐ ะดะฐะฝะฝัั
echo "  - ะะฐะฟััะบ PostgreSQL..."
if docker images | grep -q postgres; then
    docker run -d --name agb_etp_postgres \
      -e POSTGRES_USER=agb_etp \
      -e POSTGRES_PASSWORD=agb_secure_password_2024 \
      -e POSTGRES_DB=agb_etp \
      -p 5432:5432 \
      -v postgres_data:/var/lib/postgresql/data \
      postgres:14-alpine
else
    echo "โ ะะฑัะฐะท PostgreSQL ะฝะต ะฝะฐะนะดะตะฝ"
    exit 1
fi

# ะะดะตะผ ะทะฐะฟััะบะฐ ะฑะฐะทั ะดะฐะฝะฝัั
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ PostgreSQL..."
sleep 15

# ะะฐะฟััะบะฐะตะผ ะฑัะบะตะฝะด
echo "  - ะะฐะฟััะบ Backend..."
if docker images | grep -q agb_etp-backend; then
    docker run -d --name agb_etp_backend \
      --link agb_etp_postgres:postgres \
      -e DATABASE_URL=postgresql://agb_etp:agb_secure_password_2024@postgres:5432/agb_etp \
      -e POSTGRES_USER=agb_etp \
      -e POSTGRES_PASSWORD=agb_secure_password_2024 \
      -e POSTGRES_DB=agb_etp \
      -e POSTGRES_HOST=postgres \
      -e POSTGRES_PORT=5432 \
      -e SECRET_KEY=agb_very_secure_secret_key_2024_change_in_production \
      -e DEBUG=False \
      -e CORS_ORIGINS='["http://localhost:3000", "http://81.200.158.192:3000", "http://81.200.158.192:8000"]' \
      -e ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png \
      -e MAX_FILE_SIZE=10485760 \
      -e LOG_LEVEL=INFO \
      -p 8000:8000 \
      -v $(pwd)/uploads:/app/uploads \
      agb_etp-backend
else
    echo "โ ะะฑัะฐะท Backend ะฝะต ะฝะฐะนะดะตะฝ"
    exit 1
fi

# ะะดะตะผ ะทะฐะฟััะบะฐ ะฑัะบะตะฝะดะฐ
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ Backend..."
sleep 20

# ะัะพะฒะตััะตะผ, ััะพ Backend ัะฐะฑะพัะฐะตั
if curl -s http://localhost:8000/health > /dev/null; then
    echo "โ Backend ะทะฐะฟััะตะฝ ััะฟะตัะฝะพ"
else
    echo "โ Backend ะฝะต ะทะฐะฟัััะธะปัั"
    echo "ะะพะณะธ Backend:"
    docker logs agb_etp_backend
fi

# ะะฐะฟััะบะฐะตะผ ััะพะฝัะตะฝะด
echo "  - ะะฐะฟััะบ Frontend..."
if docker images | grep -q agb_etp-frontend; then
    docker run -d --name agb_etp_frontend \
      --link agb_etp_backend:backend \
      -e NODE_ENV=production \
      -e NEXT_PUBLIC_API_URL=http://81.200.158.192:8000 \
      -p 3000:3000 \
      agb_etp-frontend
else
    echo "โ ะะฑัะฐะท Frontend ะฝะต ะฝะฐะนะดะตะฝ"
    echo "ะะพะฟัะพะฑัะนัะต ะทะฐะฟัััะธัั: ./run-without-docker.sh"
    exit 1
fi

# ะะดะตะผ ะทะฐะฟััะบะฐ ััะพะฝัะตะฝะดะฐ
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ Frontend..."
sleep 15

# ะัะพะฒะตััะตะผ ััะฐััั
echo "๐ ะัะพะฒะตัะบะฐ ััะฐัััะฐ ะบะพะฝัะตะนะฝะตัะพะฒ:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# ะัะพะฒะตััะตะผ ะดะพัััะฟะฝะพััั
echo ""
echo "๐ ะัะพะฒะตัะบะฐ ะดะพัััะฟะฝะพััะธ:"
if curl -s http://localhost:8000/health > /dev/null; then
    echo "โ Backend API ะดะพัััะฟะตะฝ"
else
    echo "โ Backend API ะฝะตะดะพัััะฟะตะฝ"
fi

if curl -s http://localhost:3000/ > /dev/null; then
    echo "โ Frontend ะดะพัััะฟะตะฝ"
else
    echo "โ Frontend ะฝะตะดะพัััะฟะตะฝ"
fi

echo ""
echo "๐ ะะฐะฟััะบ ะทะฐะฒะตััะตะฝ!"
echo "๐ฑ Frontend ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://81.200.158.192:3000"
echo "๐ Backend API ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://81.200.158.192:8000"
echo "๐ API ะดะพะบัะผะตะฝัะฐัะธั: http://81.200.158.192:8000/docs"
echo ""
echo "๐ ะะปั ะฟัะพะฒะตัะบะธ ะปะพะณะพะฒ ะฒัะฟะพะปะฝะธัะต:"
echo "   docker logs agb_etp_frontend"
echo "   docker logs agb_etp_backend"
echo "   docker logs agb_etp_postgres"
