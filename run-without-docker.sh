#!/bin/bash

# ะกะบัะธะฟั ะดะปั ะทะฐะฟััะบะฐ ะฑะตะท Docker (ะพะฑัะพะด rate limit)
echo "๐ง ะะฐะฟััะบ ะฑะตะท Docker ะดะปั ะพะฑัะพะดะฐ rate limit..."

# ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะฒัะต ะบะพะฝัะตะนะฝะตัั
echo "โน๏ธ  ะััะฐะฝะพะฒะบะฐ ะฒัะตั ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker stop agb_etp_frontend agb_etp_backend agb_etp_postgres 2>/dev/null || true
docker rm agb_etp_frontend agb_etp_backend agb_etp_postgres 2>/dev/null || true

# ะกะพะทะดะฐะตะผ .env ัะฐะนะป
echo "๐ ะกะพะทะดะฐะฝะธะต .env ัะฐะนะปะฐ..."
cat > .env << 'EOF'
POSTGRES_USER=agb_etp
POSTGRES_PASSWORD=agb_secure_password_2024
POSTGRES_DB=agb_etp
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
DATABASE_URL=postgresql://agb_etp:agb_secure_password_2024@localhost:5432/agb_etp
SECRET_KEY=agb_very_secure_secret_key_2024_change_in_production
DEBUG=False
CORS_ORIGINS=["http://localhost:3000", "http://81.200.158.192:3000", "http://81.200.158.192:8000"]
ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png
MAX_FILE_SIZE=10485760
NEXT_PUBLIC_API_URL=http://81.200.158.192:8000
LOG_LEVEL=INFO
EOF

# ะัะพะฒะตััะตะผ, ะตััั ะปะธ Node.js
if ! command -v node &> /dev/null; then
    echo "๐ฆ ะฃััะฐะฝะพะฒะบะฐ Node.js..."
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    apt-get install -y nodejs
fi

# ะัะพะฒะตััะตะผ, ะตััั ะปะธ PostgreSQL
if ! command -v psql &> /dev/null; then
    echo "๐ฆ ะฃััะฐะฝะพะฒะบะฐ PostgreSQL..."
    apt-get update
    apt-get install -y postgresql postgresql-contrib
    systemctl start postgresql
    systemctl enable postgresql
fi

# ะะฐัััะฐะธะฒะฐะตะผ PostgreSQL
echo "๐ง ะะฐัััะพะนะบะฐ PostgreSQL..."
sudo -u postgres psql -c "CREATE USER agb_etp WITH PASSWORD 'agb_secure_password_2024';" 2>/dev/null || true
sudo -u postgres psql -c "CREATE DATABASE agb_etp OWNER agb_etp;" 2>/dev/null || true
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE agb_etp TO agb_etp;" 2>/dev/null || true

# ะะฐะฟััะบะฐะตะผ Backend ะฒ ัะพะฝะต
echo "๐ ะะฐะฟััะบ Backend..."
cd backend

# ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ Python ะทะฐะฒะธัะธะผะพััะธ
if [ ! -d "venv" ]; then
    echo "๐ฆ ะกะพะทะดะฐะฝะธะต ะฒะธัััะฐะปัะฝะพะณะพ ะพะบััะถะตะฝะธั Python..."
    python3 -m venv venv
fi

source venv/bin/activate
pip install -r requirements.txt

# ะะฐะฟััะบะฐะตะผ Backend ะฒ ัะพะฝะต
echo "๐ ะะฐะฟััะบ Backend ะฒ ัะพะฝะต..."
nohup python main.py > ../logs/backend.log 2>&1 &
BACKEND_PID=$!
echo "Backend PID: $BACKEND_PID"

cd ..

# ะะดะตะผ ะทะฐะฟััะบะฐ Backend
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ Backend..."
sleep 10

# ะัะพะฒะตััะตะผ, ััะพ Backend ัะฐะฑะพัะฐะตั
if curl -s http://localhost:8000/health > /dev/null; then
    echo "โ Backend ะทะฐะฟััะตะฝ ััะฟะตัะฝะพ"
else
    echo "โ Backend ะฝะต ะทะฐะฟัััะธะปัั"
    echo "ะะพะณะธ Backend:"
    cat logs/backend.log
fi

# ะะฐะฟััะบะฐะตะผ Frontend
echo "๐ ะะฐะฟััะบ Frontend..."
cd frontend

# ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะทะฐะฒะธัะธะผะพััะธ
if [ ! -d "node_modules" ]; then
    echo "๐ฆ ะฃััะฐะฝะพะฒะบะฐ ะทะฐะฒะธัะธะผะพััะตะน Frontend..."
    npm install
fi

# ะกะพะทะดะฐะตะผ .env.local ะดะปั Next.js
echo "๐ ะกะพะทะดะฐะฝะธะต .env.local ะดะปั Next.js..."
cat > .env.local << 'EOF'
NEXT_PUBLIC_API_URL=http://81.200.158.192:8000
EOF

# ะกะพะฑะธัะฐะตะผ ััะพะฝัะตะฝะด
echo "๐จ ะกะฑะพัะบะฐ Frontend..."
npm run build

# ะะฐะฟััะบะฐะตะผ Frontend ะฒ ัะพะฝะต
echo "๐ ะะฐะฟััะบ Frontend ะฒ ัะพะฝะต..."
nohup npm start > ../logs/frontend.log 2>&1 &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"

cd ..

# ะะดะตะผ ะทะฐะฟััะบะฐ Frontend
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ Frontend..."
sleep 15

# ะัะพะฒะตััะตะผ ััะฐััั
echo "๐ ะัะพะฒะตัะบะฐ ััะฐัััะฐ ะฟัะพัะตััะพะฒ:"
ps aux | grep -E "(python|node)" | grep -v grep

# ะัะพะฒะตััะตะผ ะดะพัััะฟะฝะพััั
echo ""
echo "๐ ะัะพะฒะตัะบะฐ ะดะพัััะฟะฝะพััะธ:"
if curl -s http://localhost:8000/health > /dev/null; then
    echo "โ Backend API ะดะพัััะฟะตะฝ"
else
    echo "โ Backend API ะฝะตะดะพัััะฟะตะฝ"
fi

if curl -s http://localhost:3000/ > /dev/null; then
    echo "โ Frontend ะดะพัััะฟะตะฝ"
else
    echo "โ Frontend ะฝะตะดะพัััะฟะตะฝ"
fi

# ะัะพะฒะตััะตะผ, ััะพ ััะพะฝัะตะฝะด ะธัะฟะพะปัะทัะตั ะฟัะฐะฒะธะปัะฝัะน API URL
echo ""
echo "๐ ะัะพะฒะตัะบะฐ API URL ะฒ ััะพะฝัะตะฝะดะต:"
if grep -q "http://81.200.158.192:8000" frontend/.env.local; then
    echo "โ NEXT_PUBLIC_API_URL ะฝะฐัััะพะตะฝ ะฟัะฐะฒะธะปัะฝะพ"
else
    echo "โ NEXT_PUBLIC_API_URL ะฝะต ะฝะฐัััะพะตะฝ"
fi

# ะขะตััะธััะตะผ API ะทะฐะฟัะพั
echo ""
echo "๐ ะขะตััะธัะพะฒะฐะฝะธะต API ะทะฐะฟัะพัะฐ:"
if curl -s -H "Origin: http://81.200.158.192:3000" -H "Content-Type: application/json" -X POST -d '{"email":"admin@almazgeobur.ru","password":"admin123"}' http://localhost:8000/api/v1/auth/login > /dev/null; then
    echo "โ API ะทะฐะฟัะพั ัะฐะฑะพัะฐะตั"
else
    echo "โ API ะทะฐะฟัะพั ะฝะต ัะฐะฑะพัะฐะตั"
fi

echo ""
echo "๐ ะะฐะฟััะบ ะทะฐะฒะตััะตะฝ!"
echo "๐ฑ Frontend ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://81.200.158.192:3000"
echo "๐ Backend API ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://81.200.158.192:8000"
echo "๐ API ะดะพะบัะผะตะฝัะฐัะธั: http://81.200.158.192:8000/docs"
echo ""
echo "๐ ะะปั ะฟัะพะฒะตัะบะธ ะปะพะณะพะฒ ะฒัะฟะพะปะฝะธัะต:"
echo "   tail -f logs/frontend.log"
echo "   tail -f logs/backend.log"
echo ""
echo "๐ ะะปั ะพััะฐะฝะพะฒะบะธ ะฒัะฟะพะปะฝะธัะต:"
echo "   kill $FRONTEND_PID $BACKEND_PID"
