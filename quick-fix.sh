#!/bin/bash

# ะััััะพะต ะธัะฟัะฐะฒะปะตะฝะธะต ะฟัะพะฑะปะตะผ ั ะทะฐะฒะธัะธะผะพัััะผะธ
echo "๐ง ะััััะพะต ะธัะฟัะฐะฒะปะตะฝะธะต ะฟัะพะฑะปะตะผ ั ะทะฐะฒะธัะธะผะพัััะผะธ..."

# ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ npm
echo "๐ฆ ะฃััะฐะฝะพะฒะบะฐ npm..."
apt-get update
apt-get install -y npm

# ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ Python ะทะฐะฒะธัะธะผะพััะธ ัะธััะตะผะฝะพ
echo "๐ ะฃััะฐะฝะพะฒะบะฐ Python ะทะฐะฒะธัะธะผะพััะตะน..."
cd backend
pip3 install --break-system-packages -r requirements.txt
cd ..

# ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ Node.js ะทะฐะฒะธัะธะผะพััะธ
echo "๐ฆ ะฃััะฐะฝะพะฒะบะฐ Node.js ะทะฐะฒะธัะธะผะพััะตะน..."
cd frontend
npm install
cd ..

# ะกะพะทะดะฐะตะผ ะฟะฐะฟะบั ะดะปั ะปะพะณะพะฒ
echo "๐ ะกะพะทะดะฐะฝะธะต ะฟะฐะฟะบะธ ะดะปั ะปะพะณะพะฒ..."
mkdir -p logs

# ะกะพะทะดะฐะตะผ .env ัะฐะนะป
echo "๐ ะกะพะทะดะฐะฝะธะต .env ัะฐะนะปะฐ..."
cat > .env << 'EOF'
POSTGRES_USER=agb_etp
POSTGRES_PASSWORD=agb_secure_password_2024
POSTGRES_DB=agb_etp
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
DATABASE_URL=postgresql://agb_etp:agb_secure_password_2024@localhost:5432/agb_etp
SECRET_KEY=agb_very_secure_secret_key_2024_change_in_production
DEBUG=False
CORS_ORIGINS=["http://localhost:3000", "http://81.200.158.192:3000", "http://81.200.158.192:8000"]
ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png
MAX_FILE_SIZE=10485760
NEXT_PUBLIC_API_URL=http://81.200.158.192:8000
LOG_LEVEL=INFO
EOF

# ะะฐัััะฐะธะฒะฐะตะผ PostgreSQL
echo "๐ง ะะฐัััะพะนะบะฐ PostgreSQL..."
sudo -u postgres psql -c "CREATE USER agb_etp WITH PASSWORD 'agb_secure_password_2024';" 2>/dev/null || true
sudo -u postgres psql -c "CREATE DATABASE agb_etp OWNER agb_etp;" 2>/dev/null || true
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE agb_etp TO agb_etp;" 2>/dev/null || true

# ะะฐะฟััะบะฐะตะผ Backend
echo "๐ ะะฐะฟััะบ Backend..."
cd backend
nohup python3 main.py > ../logs/backend.log 2>&1 &
BACKEND_PID=$!
echo "Backend PID: $BACKEND_PID"
cd ..

# ะะดะตะผ ะทะฐะฟััะบะฐ Backend
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ Backend..."
sleep 10

# ะัะพะฒะตััะตะผ Backend
if curl -s http://localhost:8000/health > /dev/null; then
    echo "โ Backend ะทะฐะฟััะตะฝ ััะฟะตัะฝะพ"
else
    echo "โ Backend ะฝะต ะทะฐะฟัััะธะปัั"
    echo "ะะพะณะธ Backend:"
    cat logs/backend.log
fi

# ะะฐะฟััะบะฐะตะผ Frontend
echo "๐ ะะฐะฟััะบ Frontend..."
cd frontend

# ะกะพะทะดะฐะตะผ .env.local ะดะปั Next.js
echo "๐ ะกะพะทะดะฐะฝะธะต .env.local ะดะปั Next.js..."
cat > .env.local << 'EOF'
NEXT_PUBLIC_API_URL=http://81.200.158.192:8000
EOF

# ะกะพะฑะธัะฐะตะผ ััะพะฝัะตะฝะด
echo "๐จ ะกะฑะพัะบะฐ Frontend..."
npm run build

# ะะฐะฟััะบะฐะตะผ Frontend
echo "๐ ะะฐะฟััะบ Frontend..."
nohup npm start > ../logs/frontend.log 2>&1 &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"
cd ..

# ะะดะตะผ ะทะฐะฟััะบะฐ Frontend
echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ Frontend..."
sleep 15

# ะัะพะฒะตััะตะผ ััะฐััั
echo "๐ ะัะพะฒะตัะบะฐ ััะฐัััะฐ ะฟัะพัะตััะพะฒ:"
ps aux | grep -E "(python3|node)" | grep -v grep

# ะัะพะฒะตััะตะผ ะดะพัััะฟะฝะพััั
echo ""
echo "๐ ะัะพะฒะตัะบะฐ ะดะพัััะฟะฝะพััะธ:"
if curl -s http://localhost:8000/health > /dev/null; then
    echo "โ Backend API ะดะพัััะฟะตะฝ"
else
    echo "โ Backend API ะฝะตะดะพัััะฟะตะฝ"
fi

if curl -s http://localhost:3000/ > /dev/null; then
    echo "โ Frontend ะดะพัััะฟะตะฝ"
else
    echo "โ Frontend ะฝะตะดะพัััะฟะตะฝ"
fi

echo ""
echo "๐ ะัะฟัะฐะฒะปะตะฝะธะต ะทะฐะฒะตััะตะฝะพ!"
echo "๐ฑ Frontend ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://81.200.158.192:3000"
echo "๐ Backend API ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://81.200.158.192:8000"
echo "๐ API ะดะพะบัะผะตะฝัะฐัะธั: http://81.200.158.192:8000/docs"
echo ""
echo "๐ ะะปั ะฟัะพะฒะตัะบะธ ะปะพะณะพะฒ ะฒัะฟะพะปะฝะธัะต:"
echo "   tail -f logs/frontend.log"
echo "   tail -f logs/backend.log"
echo ""
echo "๐ ะะปั ะพััะฐะฝะพะฒะบะธ ะฒัะฟะพะปะฝะธัะต:"
echo "   kill $FRONTEND_PID $BACKEND_PID"
