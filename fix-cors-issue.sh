#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CORS –ø—Ä–æ–±–ª–µ–º—ã
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –ø—Ä–æ–±–ª–µ–º—ã..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down 2>/dev/null || true
docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
docker-compose -f docker-compose.local.yml down 2>/dev/null || true

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
docker rmi agb_etp-frontend 2>/dev/null || true

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å –ø—É—Å—Ç—ã–º API URL (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏)
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º API URL..."
cd frontend
docker build -t agb_etp-frontend --build-arg NEXT_PUBLIC_API_URL="" --no-cache .
cd ..

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cat > .env << 'EOF'
POSTGRES_USER=agb_etp
POSTGRES_PASSWORD=agb_secure_password_2024
POSTGRES_DB=agb_etp
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
DATABASE_URL=postgresql://agb_etp:agb_secure_password_2024@postgres:5432/agb_etp
SECRET_KEY=agb_very_secure_secret_key_2024_change_in_production
DEBUG=False
CORS_ORIGINS=["http://localhost", "http://81.200.158.192", "https://81.200.158.192"]
ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png
MAX_FILE_SIZE=10485760
NEXT_PUBLIC_API_URL=
LOG_LEVEL=INFO
EOF
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –æ–±—Ä–∞–∑–∞–º–∏
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º..."
docker-compose -f docker-compose.local.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 20

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.local.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"
if curl -s http://localhost/api/health > /dev/null; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ nginx"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ nginx"
fi

if curl -s http://localhost/ > /dev/null; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS:"
if curl -s -H "Origin: http://81.200.158.192" -H "Access-Control-Request-Method: POST" -H "Access-Control-Request-Headers: Content-Type" -X OPTIONS http://localhost/api/v1/auth/login | grep -q "Access-Control-Allow-Origin"; then
    echo "‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
else
    echo "‚ùå CORS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

echo ""
echo "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$(hostname -I | awk '{print $1}')"
echo "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://$(hostname -I | awk '{print $1}')/api/ololo/docs"
echo ""
echo "üîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   docker-compose -f docker-compose.local.yml logs -f"
